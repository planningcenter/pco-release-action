name: PCO-Release - QA Release Automation
on:
  workflow_call:
    inputs:
      install-command:
        description: "The script command to use to install the package's dependencies"
        required: false
        type: string
        default: "yarn install --check-files"
      build-command:
        description: "The script command to use to build the package"
        required: false
        type: string
        default: "yarn build"
      test-command:
        description: "The script command to use to test the package"
        required: false
        type: string
        default: "yarn test"
      prepublish-command:
        description: "The command to run to publish a prerelease version of the package to NPM"
        required: false
        type: string
        default: "npm publish --tag next"
      cache:
        description: "Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm, or '' for no caching."
        required: false
        type: string
        default: "yarn"
      build-directory:
        description: "The build output directory"
        required: false
        type: string
        default: "dist"
      only:
        description: "Only run on specific repos. This is a comma separated list of repo names (ie 'people,services,groups')"
        required: false
        type: string
        default: ""
      include:
        description: "repos to include without checking. Comma separated list"
        required: false
        type: string
        default: ""
      exclude:
        description: "repos to exclude without checking. Comma separated list"
        required: false
        type: string
        default: ""
      upgrade-commands:
        description: "JSON string of repo names and their specific upgrade commands. Useful for monorepos where the package.json does not exist in the root directory."
        required: false
        type: string
        default: "{}"
      package-json-path:
        description: "path to package.json"
        required: false
        type: string
        default: "package.json"
      yarn-version-command:
        description: "command to run to update version"
        required: false
        type: string
        default: "yarn version"
jobs:
  create-qa-release:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '@pco-release qa')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Create QA Pre-Release
        id: create-qa-release
        uses: planningcenter/pco-release-action/create-qa-release@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          package-json-path: ${{ inputs.package-json-path }}
          yarn-version-command: ${{ inputs.yarn-version-command }}
    outputs:
      release-tag: v${{ env.new_version }}
  publish-to-npm:
    needs: create-qa-release
    uses: planningcenter/pco-release-action/.github/workflows/publish.yml@v1
    secrets: inherit
    with:
      install-command: ${{ inputs.install-command }}
      build-command: ${{ inputs.build-command }}
      test-command: ${{ inputs.test-command }}
      prepublish-command: ${{ inputs.prepublish-command }}
      cache: ${{ inputs.cache }}
      build-directory: ${{ inputs.build-directory }}
      ref: ${{ needs.create-qa-release.outputs.release-tag }}
      prerelease: true
  deploy-to-proto-for-consumers:
    needs: [create-qa-release, publish-to-npm]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Push to protonova branch for Consumers
        uses: planningcenter/pco-release-action/deploy@v1
        with:
          app-id: ${{ secrets.PCO_DEPENDENCIES_APP_ID }}
          private-key: ${{ secrets.PCO_DEPENDENCIES_PRIVATE_KEY }}
          ref: ${{ needs.create-qa-release.outputs.release-tag }}
          change-method: "merge"
          branch-name: "proto/${{ github.repository }}-${{ github.event.issue.number }}"
          only: ${{ inputs.only }}
          exclude: ${{ inputs.exclude }}
          include: ${{ inputs.include }}
          upgrade-commands: ${{ inputs.upgrade-commands }}
          allow-major: true
