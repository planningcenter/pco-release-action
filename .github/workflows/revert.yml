name: PCO-Release - Revert
on:
  workflow_call:
    inputs:
      pr-number:
        description: "The PR number that triggered the release"
        required: true
        type: string
      release-tag:
        description: "The release tag to revert to"
        required: true
        type: string
      only:
        description: "Only run on specific repos. This is a comma separated list of repo names (ie 'people,services,groups')"
        required: false
        type: string
        default: ""
      include:
        description: "repos to include without checking. Comma separated list"
        required: false
        type: string
        default: ""
      exclude:
        description: "repos to exclude without checking. Comma separated list"
        required: false
        type: string
        default: ""
      package-json-path:
        description: "The path to the package.json file to version."
        required: false
        type: string
        default: "package.json"

jobs:
  deploy-to-consumers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      PR_NUMBER: ${{ inputs.pr-number }}
      release_tag: ${{ inputs.release-tag }}
    steps:
      - name: Push to Consumers
        id: push-to-consumers
        uses: planningcenter/pco-release-action/deploy@v1
        with:
          app-id: ${{ secrets.PCO_DEPENDENCIES_APP_ID }}
          private-key: ${{ secrets.PCO_DEPENDENCIES_PRIVATE_KEY }}
          ref: ${{ inputs.release-tag }}
          change-method: "revert"
          only: ${{ inputs.only }}
          exclude: ${{ inputs.exclude }}
          include: ${{ inputs.include }}
          allow-major: true
          package-json-path: ${{ inputs.package-json-path }}

      - name: Post results to original PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const results = JSON.parse(process.env.results_json);
            const body = `## Revert Automation Results

            Reverted back to [${process.env.release_tag}](https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${process.env.release_tag})

            ${results.successful_repos.length > 0 ? "### PRs created" : ""}

            ${results.successful_repos.map(repo => "- [" + repo.name + "](" + repo.pr_url + ")").join("\n")}

            ${results.failed_repos.length > 0 ? "### PRs failed" : ""}

            ${results.failed_repos.map(repo => "- " + repo.name + ": " + repo.message).join("\n")}

            ### Next steps

            Run the following command to approve all the PRs:

            \`\`\`
              ${results.successful_repos.map(repo => "gh pr review " + repo.pr_number + " --repo=planningcenter/" + repo.name + " -a").join("\n")}
            \`\`\`

            ### If you need to revert

            - Go to the actions tab
            - Click \`Revert\` on the left hand actions list
            - Click to the \`Run workflow\` button on the right
            - enter the last successful version and click \`Run workflow\`
            `
            github.rest.issues.createComment({
              issue_number: process.env.PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

            if (results.failed_repos.length > 0) {
              throw new Error("Some PRs failed to create");
            }
