name: PCO Release - Create Release on PR Merge
description: Automates the creation of a release when a `PCO-Release` PR is merged.

inputs:
  package_json_path:
    description: 'The path to the package.json file to version.'
    required: false
    default: 'package.json'
  app-id:
    description: 'The app id for the github app'
    required: false
  private-key:
    description: 'The private key for the github app'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout
      id: checkout
      if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'pco-release-pending')
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
        fetch-tags: true
    - run: echo "version=$v$(jq -r .version ${{ inputs.package_json_path }})" >> $GITHUB_ENV
      id: get-version
      if: steps.checkout.outcome == 'success'
      shell: bash
    - name: Generate a token
      if: steps.checkout.outcome == 'success' && inputs.app-id && inputs.private-key
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}
        owner: ${{ github.repository_owner }}
    - name: Create Release
      uses: ncipollo/release-action@v1
      if: steps.checkout.outcome == 'success'
      with:
        tag: v${{ env.version }}
        commit: main
        generateReleaseNotes: true
        token: ${{ steps.generate-token.outputs.token || github.token }}
