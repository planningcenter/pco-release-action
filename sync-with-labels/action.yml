name: PCO Release - Sync PR with Labels
description: Automates keeping the release PR up-to-date when updating labels

inputs:
  GITHUB_TOKEN:
    description: token for access
    required: true
  cache:
    description: "Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm, or '' for no caching."
    required: false
    type: string
    default: "yarn"
  package_json_path:
    description: "The path to the package.json file to version."
    required: false
    default: "package.json"
  version_command:
    description: "The command to run to bump the version"
    required: false
    default: "yarn version"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      if: ${{ github.event.pull_request.head.ref == 'pco-release--internal' && (github.event.label.name == 'pco-release-patch' || github.event.label.name == 'pco-release-minor' || github.event.label.name == 'pco-release-major') }}
    - uses: actions/setup-node@v4
      if: ${{ github.event.pull_request.head.ref == 'pco-release--internal' && (github.event.label.name == 'pco-release-patch' || github.event.label.name == 'pco-release-minor' || github.event.label.name == 'pco-release-major') }}
      with:
        node-version: "20"
        cache: ${{ inputs.cache }}
    - uses: planningcenter/pco-release-action/release-by-pr@v1
      if: ${{ github.event.pull_request.head.ref == 'pco-release--internal' && (github.event.label.name == 'pco-release-patch' || github.event.label.name == 'pco-release-minor' || github.event.label.name == 'pco-release-major') }}
      with:
        package_json_path: ${{ inputs.package_json_path }}
        version_command: ${{ inputs.version_command }}
        release_type: ${{ (github.event.label.name == 'pco-release-patch' && 'patch') || (github.event.label.name == 'pco-release-minor' && 'minor') || (github.event.label.name == 'pco-release-major' && 'major') }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
